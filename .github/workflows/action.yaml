name: Build and deploy workflow
on: [ push ]
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: docker build
        run: docker build -t mor1nch/skypro_exam_1st_june:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: docker push
        run: docker push mor1nch/skypro_exam_1st_june:$GITHUB_REF_NAME-$GITHUB_RUN_ID
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: render configs
        run: |
          mkdir skypro_exam
          cat docker-compose-ci.yaml | envsubst > skypro_exam/docker-compose.yaml
          cat docker_config-ci.py | envsubst > skypro_exam/docker_config.py
      - name: Copy docker-compose.yaml to remote server
        run: |
          echo ${{ secrets.PASSWORD }} | scp -r -P 22 skypro_exam/docker-compose.yaml ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/flask_exam_app_ci

      - name: Copy docker_config.py to remote server
        run: |
          echo ${{ secrets.PASSWORD }} | scp -r -P 22 skypro_exam/docker_config.py ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/flask_exam_app_ci

      - name: skypro_exam application
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd flask_exam_app_ci
            echo ${{ secrets.PASSWORD }} | sudo -S docker-compose up -d